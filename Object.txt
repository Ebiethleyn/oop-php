Object Oriented Programming (OOP)
» Menyusun semua kode pogram dan struktur data sebagai objek
» Objek adalah unit dasar dari program
» Objek menyimpan data dan perilaku (Properti & Method)
» Objek bisa saling berinteraksi

Kelebihan OOP
» Representasi Dunia Nyata
» Enkapsulasi (Memungkinkan data yang kita buat itu aman dari sisi tidak bisa diakses oleh bagianlain dari program kita)
» Abstraksi Data (kita akan mudah menyembunyikan kerumitan dari program kita)
» Reusability (mengguna ulang bagian-bagian program yang telah dibuat)
» Skalabilitas & Ekstensibilitas (akan memudahkan pengembang ketika programnya sudah besaer)
» kemudahan pengelolaan
» Kolaborasi
» Digunakan Oleh Framework

Basic OOP
» Class & Object
» Properti & Method
» Constructor (Karakteristik Default)
» Object type (tipe data object)
» Inheritance (Pewarisan)
» Visibility / Access Modifier (dimana OOP punya Karakteristik Enkapsulasi)
» Setter & Getter
» Static Method

Advance
» Abstract & Interface 
» Interseptor (Magic Method)
» Object Cloning (Menduplikasi object sehingga memiliki perilaku yang beda)
» Callbacks & Closures 
» Namespaces & Autoloading


• Class
» Blueprint / Tempalte untuk membuat Instance dari Object
» Mendefinisikan Object
» Menyimpan Data dan perilaku yang disebut dengan property dan Method

• Object
» Instance yang didefinisikan oleh Class
» Banyak object dapat dibuat hanya dengan satu Class
» Object dibuat dengan menggunakan keyword new

• Property
» Merepresentasikan data / keadaan dari sebuah object
» Variable yang ada di dalam object (member Variable)
» Di depan ditambahkan dengan Visibility (public, protected, private)

• Method
» Merepresentasikan perilaku dari sebuah object
» Function yang ada di dalam object
» ditambahkan Visibility depannya (Default public)


• Constructor
» Method yang otomatis dijalankan ketika sebuah class di instansiasi atau kita buat objecnya


• Object Type


• Inheritance
»  Menciptakan Hierarki antar kelas (Parent & Child)
» Chid Class Mewarisi semua Properti dan Method dari Parent-nya (yang visinle)
» Child Class memperluas (extends) fungsionalitas dari parent-nya


• Overriding
» dimana kita bisa membuat method di kelas child yang memiliki nama yang sama dengan kelas parent-nya
» atau method yang kita buat menimpa method di parent class
» melakukan fungsionalitas yang sama, tetapi dengan keadaan yang berbeda


• Visibility (Access Modifier)
» Konsep yang digunakan untuk mengatur akses dari Property dan method pada sebuah objek
» ada 3 keyword visibility : public, protected, dan private
» public: dapat digunakan dimana saja, bahkan di luar kelas
» protected : hanya dapat digunakan di sebuah kelas berserta turunan-nya
» private: hanya bisa digunakan di sebuah kelas tertentu saja
» hanya memperlihatkan aspek dari class yang dibutuhkan oleh 'client'
» menentukan kebutuhan yang jelas dari sebuah object
» memberikan kendali pada kode kita untuk menghindari 'bug'


• Setter & Getter (Accessor Method)
» method untuk sen set dan get
» untuk menghindari ketika membuat property dengan visibility public
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»

